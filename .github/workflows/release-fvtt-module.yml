on:
  push:
    branches:
      - main

name: Release FoundryVTT Module

jobs:
  check_version:
    name: Check FoundryVTT module version
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.version_check.outputs.changed }}
      current_version: ${{ steps.version_check.outputs.current_version }}
      previous_version: ${{ steps.version_check.outputs.previous_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Check for version changes
        id: version_check
        run: |
          current_version=$(jq -r .version module.json)
          echo "current_version=v$current_version" >> $GITHUB_OUTPUT

          # Get previous version from git tags
          previous_version=$(git tag --sort=-version:refname | head -n1 || echo "v0.0.0")
          echo "previous_version=$previous_version" >> $GITHUB_OUTPUT

          if [ "v$current_version" != "$previous_version" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $previous_version to v$current_version"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No version change detected"
          fi

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: check_version
    if: needs.check_version.outputs.version_changed == 'true'
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quality checks
        run: |
          npx eslint . --ext .ts,.js
          npx tsc --noEmit --skipLibCheck || echo "TypeScript check failed but continuing..."

      - name: Update download URL in module.json
        run: |
          jq '.download = "https://github.com/${{ github.repository }}/releases/download/${{ needs.check_version.outputs.current_version }}/${{ github.event.repository.name }}.zip"' module.json > module.json.tmp
          mv module.json.tmp module.json

      - name: Build production package
        run: npm run build

      - name: Create module package
        working-directory: ./dist
        run: zip -r ../${{ github.event.repository.name }}.zip *

      - name: Generate changelog
        id: changelog
        run: |
          if [ "${{ needs.check_version.outputs.previous_version }}" != "v0.0.0" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${{ needs.check_version.outputs.previous_version }}..HEAD)
          else
            CHANGELOG="Initial release"
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.check_version.outputs.current_version }}
          name: Release ${{ needs.check_version.outputs.current_version }}
          body: |
            ## Changes
            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            1. Download the `${{ github.event.repository.name }}.zip` file below
            2. Extract it to your FoundryVTT `Data/modules` directory
            3. Restart FoundryVTT and enable the module in your world settings

            ## Compatibility

            This release is compatible with FoundryVTT v9.238+ through v12.x
          files: |
            ${{ github.event.repository.name }}.zip
            module.json
          draft: false
          prerelease: false
          generate_release_notes: true
